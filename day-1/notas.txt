Portas dos componentes do Kubernetes

Kube-APIServer -> 6443 - tcp
etcd -> 2379-2380 - tcp
Kube-Scheduler -> 10251 - tcp
Kubelet -> 10250 - tcp
Kube-Controller -> 10252 - tcp
Node Port -> 30000-32767 - tcp
Weave Net -> 6783-6784 - tcp/udp

Conceitos de pods, replica sets, deployments, service e node

Pod = podem conter vários containers (compartilham os mesmos recursos do pod), um IP apenas para o pod. Um único isolamento.

Deployment cria um replica set, com todos os recursos necessários do container.

Recplica set gerencia os pod

Service, existem diversos tipos de services para estas atividades.

Node

---------------------

KUBECTL

Instalação a partir da documentação oficial

---------------------

Kind

ubuntu@lab-container:~$ kind create cluster
Creating cluster "kind" ...
 ✓ Ensuring node image (kindest/node:v1.25.3) 🖼
 ✓ Preparing nodes 📦
 ✓ Writing configuration 📜
 ✓ Starting control-plane 🕹️
 ✓ Installing CNI 🔌
 ✓ Installing StorageClass 💾
Set kubectl context to "kind-kind"
You can now use your cluster with:

kubectl cluster-info --context kind-kind


Multi nós

Criar arquivo .yaml com as configurações
kind create cluster --config kind-cluster.yaml --name giropops

Creating cluster "giropops" ...
 ✓ Ensuring node image (kindest/node:v1.25.3) 🖼
 ✓ Preparing nodes 📦 📦 📦
 ✓ Writing configuration 📜
 ✓ Starting control-plane 🕹️
 ✓ Installing CNI 🔌
 ✓ Installing StorageClass 💾
 ✓ Joining worker nodes 🚜
Set kubectl context to "kind-giropops"
You can now use your cluster with:

kubectl cluster-info --context kind-giropops

-------------------------Comandos

kubectl get pods -n kube-system
kubectl get pods -n kube-system -o wide


------Completion

echo "source $HOME/.kube/completion.bash.inc" >>  $HOME/.bash_profile
source  $HOME/.bash_profile


-------Criar um POD

kubectl run --image nginx --port 80  giropops

-------Deletar POD

kubectl delete pods giropops


-------------Criação de pods com saida em arquivo yaml

k run --image nginx --port 80 giropops --dry-run=client -o yaml

apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: giropops
  name: giropops
spec:
  containers:
  - image: nginx
    name: giropops
    ports:
    - containerPort: 80
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}

--Gerando o arquivo yaml

k run --image nginx --port 80 giropops --dry-run=client -o yaml > pod.yaml

--------------------Criando o pods a partir de um arquivo yaml

k apply -f pod.yaml

